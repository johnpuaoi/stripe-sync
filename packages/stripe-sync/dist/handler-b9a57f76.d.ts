import Stripe from 'stripe';
import { DatabaseAdapter } from './databaseAdapters/createDatabaseAdapter.js';

declare const STRIPE_EVENT_TABLE_MAP: {
    "account.application.authorized": string;
    "account.application.deauthorized": string;
    "account.updated": string;
    "application_fee.created": string;
    "application_fee.refund.updated": string;
    "application_fee.refunded": string;
    "balance.available": string;
    "billing_portal.configuration.created": string;
    "billing_portal.configuration.updated": string;
    "billing_portal.session.created": string;
    "capability.updated": string;
    "cash_balance.funds_available": string;
    "charge.captured": string;
    "charge.dispute.closed": string;
    "charge.dispute.created": string;
    "charge.dispute.funds_reinstated": string;
    "charge.dispute.funds_withdrawn": string;
    "charge.dispute.updated": string;
    "charge.expired": string;
    "charge.failed": string;
    "charge.pending": string;
    "charge.refund.updated": string;
    "charge.refunded": string;
    "charge.succeeded": string;
    "charge.updated": string;
    "checkout.session.async_payment_failed": string;
    "checkout.session.async_payment_succeeded": string;
    "checkout.session.completed": string;
    "checkout.session.expired": string;
    "coupon.created": string;
    "coupon.deleted": string;
    "coupon.updated": string;
    "credit_note.created": string;
    "credit_note.updated": string;
    "credit_note.voided": string;
    "customer.created": string;
    "customer.deleted": string;
    "customer.discount.created": string;
    "customer.discount.deleted": string;
    "customer.discount.updated": string;
    "customer.source.created": string;
    "customer.source.deleted": string;
    "customer.source.expiring": string;
    "customer.source.updated": string;
    "customer.subscription.created": string;
    "customer.subscription.deleted": string;
    "customer.subscription.pending_update_applied": string;
    "customer.subscription.pending_update_expired": string;
    "customer.subscription.trial_will_end": string;
    "customer.subscription.updated": string;
    "customer.tax_id.created": string;
    "customer.tax_id.deleted": string;
    "customer.tax_id.updated": string;
    "customer.updated": string;
    "customer_cash_balance_transaction.created": string;
    "file.created": string;
    "financial_connections.account.created": string;
    "financial_connections.account.deactivated": string;
    "financial_connections.account.disconnected": string;
    "financial_connections.account.reactivated": string;
    "financial_connections.account.refreshed_balance": string;
    "identity.verification_session.canceled": string;
    "identity.verification_session.created": string;
    "identity.verification_session.processing": string;
    "identity.verification_session.redacted": string;
    "identity.verification_session.requires_input": string;
    "identity.verification_session.verified": string;
    "invoice.created": string;
    "invoice.deleted": string;
    "invoice.finalization_failed": string;
    "invoice.finalized": string;
    "invoice.marked_uncollectible": string;
    "invoice.paid": string;
    "invoice.payment_action_required": string;
    "invoice.payment_failed": string;
    "invoice.payment_succeeded": string;
    "invoice.sent": string;
    "invoice.upcoming": string;
    "invoice.updated": string;
    "invoice.voided": string;
    "invoiceitem.created": string;
    "invoiceitem.deleted": string;
    "invoiceitem.updated": string;
    "issuing_authorization.created": string;
    "issuing_authorization.request": string;
    "issuing_authorization.updated": string;
    "issuing_card.created": string;
    "issuing_card.updated": string;
    "issuing_cardholder.created": string;
    "issuing_cardholder.updated": string;
    "issuing_dispute.closed": string;
    "issuing_dispute.created": string;
    "issuing_dispute.funds_reinstated": string;
    "issuing_dispute.submitted": string;
    "issuing_dispute.updated": string;
    "issuing_transaction.created": string;
    "issuing_transaction.updated": string;
    "mandate.updated": string;
    "order.created": string;
    "payment_intent.amount_capturable_updated": string;
    "payment_intent.canceled": string;
    "payment_intent.created": string;
    "payment_intent.partially_funded": string;
    "payment_intent.payment_failed": string;
    "payment_intent.processing": string;
    "payment_intent.requires_action": string;
    "payment_intent.succeeded": string;
    "payment_link.created": string;
    "payment_link.updated": string;
    "payment_method.attached": string;
    "payment_method.automatically_updated": string;
    "payment_method.detached": string;
    "payment_method.updated": string;
    "payout.canceled": string;
    "payout.created": string;
    "payout.failed": string;
    "payout.paid": string;
    "payout.updated": string;
    "person.created": string;
    "person.deleted": string;
    "person.updated": string;
    "plan.created": string;
    "plan.deleted": string;
    "plan.updated": string;
    "price.created": string;
    "price.deleted": string;
    "price.updated": string;
    "product.created": string;
    "product.deleted": string;
    "product.updated": string;
    "promotion_code.created": string;
    "promotion_code.updated": string;
    "quote.accepted": string;
    "quote.canceled": string;
    "quote.created": string;
    "quote.finalized": string;
    "radar.early_fraud_warning.created": string;
    "radar.early_fraud_warning.updated": string;
    "recipient.created": string;
    "recipient.deleted": string;
    "recipient.updated": string;
    "reporting.report_run.failed": string;
    "reporting.report_run.succeeded": string;
    "reporting.report_type.updated": string;
    "review.closed": string;
    "review.opened": string;
    "setup_intent.canceled": string;
    "setup_intent.created": string;
    "setup_intent.requires_action": string;
    "setup_intent.setup_failed": string;
    "setup_intent.succeeded": string;
    "sigma.scheduled_query_run.created": string;
    "sku.created": string;
    "sku.deleted": string;
    "sku.updated": string;
    "source.canceled": string;
    "source.chargeable": string;
    "source.failed": string;
    "source.mandate_notification": string;
    "source.refund_attributes_required": string;
    "source.transaction.created": string;
    "source.transaction.updated": string;
    "subscription_schedule.aborted": string;
    "subscription_schedule.canceled": string;
    "subscription_schedule.completed": string;
    "subscription_schedule.created": string;
    "subscription_schedule.expiring": string;
    "subscription_schedule.released": string;
    "subscription_schedule.updated": string;
    "tax_rate.created": string;
    "tax_rate.updated": string;
    "terminal.reader.action_failed": string;
    "terminal.reader.action_succeeded": string;
    "test_helpers.test_clock.advancing": string;
    "test_helpers.test_clock.created": string;
    "test_helpers.test_clock.deleted": string;
    "test_helpers.test_clock.internal_failure": string;
    "test_helpers.test_clock.ready": string;
    "topup.canceled": string;
    "topup.created": string;
    "topup.failed": string;
    "topup.reversed": string;
    "topup.succeeded": string;
    "transfer.created": string;
    "transfer.reversed": string;
    "transfer.updated": string;
    "treasury.credit_reversal.created": string;
    "treasury.credit_reversal.posted": string;
    "treasury.debit_reversal.completed": string;
    "treasury.debit_reversal.created": string;
    "treasury.debit_reversal.initial_credit_granted": string;
    "treasury.financial_account.closed": string;
    "treasury.financial_account.created": string;
    "treasury.financial_account.features_status_updated": string;
    "treasury.inbound_transfer.canceled": string;
    "treasury.inbound_transfer.created": string;
    "treasury.inbound_transfer.failed": string;
    "treasury.inbound_transfer.succeeded": string;
    "treasury.outbound_payment.canceled": string;
    "treasury.outbound_payment.created": string;
    "treasury.outbound_payment.expected_arrival_date_updated": string;
    "treasury.outbound_payment.failed": string;
    "treasury.outbound_payment.posted": string;
    "treasury.outbound_payment.returned": string;
    "treasury.outbound_transfer.canceled": string;
    "treasury.outbound_transfer.created": string;
    "treasury.outbound_transfer.expected_arrival_date_updated": string;
    "treasury.outbound_transfer.failed": string;
    "treasury.outbound_transfer.posted": string;
    "treasury.outbound_transfer.returned": string;
    "treasury.received_credit.created": string;
    "treasury.received_credit.failed": string;
    "treasury.received_credit.succeeded": string;
    "treasury.received_debit.created": string;
};

type StripeEventTypes = keyof typeof STRIPE_EVENT_TABLE_MAP;
type StripeWebhookCallbacks = {
    [type in StripeEventTypes]?: (event: Stripe.Event) => Promise<void> | void;
};
interface HandlerOptions {
    stripe: Stripe;
    stripeEndpointSecret: string;
    stripeSecretKey: string;
    databaseAdapter?: DatabaseAdapter;
    insertIntoDatabaseFirst?: boolean;
    callbacks?: StripeWebhookCallbacks;
    cryptoProvider?: Stripe.CryptoProvider;
    enableLogs?: boolean;
}

export { HandlerOptions as H, StripeEventTypes as S, StripeWebhookCallbacks as a };
