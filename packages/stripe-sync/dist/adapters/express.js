"use strict";
var __create = Object.create;
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __getProtoOf = Object.getPrototypeOf;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toESM = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(
  isNodeMode || !mod || !mod.__esModule ? __defProp(target, "default", { value: mod, enumerable: true }) : target,
  mod
));
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);

// src/adapters/express.ts
var express_exports = {};
__export(express_exports, {
  createExpressHandler: () => createExpressHandler
});
module.exports = __toCommonJS(express_exports);
var import_adapter_node = require("@hattip/adapter-node");

// src/handler.ts
var import_tiny_invariant = __toESM(require("tiny-invariant"));

// generated/eventTableMap.ts
var STRIPE_EVENT_TABLE_MAP = {
  "account.application.authorized": "stripe_application",
  "account.application.deauthorized": "stripe_application",
  "account.updated": "stripe_account",
  "application_fee.created": "stripe_application_fee",
  "application_fee.refund.updated": "stripe_refund",
  "application_fee.refunded": "stripe_application_fee",
  "balance.available": "stripe_balance",
  "billing_portal.configuration.created": "stripe_configuration",
  "billing_portal.configuration.updated": "stripe_configuration",
  "billing_portal.session.created": "stripe_session",
  "capability.updated": "stripe_capability",
  "cash_balance.funds_available": "stripe_cash_balance",
  "charge.captured": "stripe_charge",
  "charge.dispute.closed": "stripe_dispute",
  "charge.dispute.created": "stripe_dispute",
  "charge.dispute.funds_reinstated": "stripe_dispute",
  "charge.dispute.funds_withdrawn": "stripe_dispute",
  "charge.dispute.updated": "stripe_dispute",
  "charge.expired": "stripe_charge",
  "charge.failed": "stripe_charge",
  "charge.pending": "stripe_charge",
  "charge.refund.updated": "stripe_refund",
  "charge.refunded": "stripe_charge",
  "charge.succeeded": "stripe_charge",
  "charge.updated": "stripe_charge",
  "checkout.session.async_payment_failed": "stripe_checkout_session",
  "checkout.session.async_payment_succeeded": "stripe_checkout_session",
  "checkout.session.completed": "stripe_checkout_session",
  "checkout.session.expired": "stripe_checkout_session",
  "coupon.created": "stripe_coupon",
  "coupon.deleted": "stripe_coupon",
  "coupon.updated": "stripe_coupon",
  "credit_note.created": "stripe_credit_note",
  "credit_note.updated": "stripe_credit_note",
  "credit_note.voided": "stripe_credit_note",
  "customer.created": "stripe_customer",
  "customer.deleted": "stripe_customer",
  "customer.discount.created": "stripe_discount",
  "customer.discount.deleted": "stripe_discount",
  "customer.discount.updated": "stripe_discount",
  "customer.source.created": "stripe_source",
  "customer.source.deleted": "stripe_source",
  "customer.source.expiring": "stripe_source",
  "customer.source.updated": "stripe_source",
  "customer.subscription.created": "stripe_subscription",
  "customer.subscription.deleted": "stripe_subscription",
  "customer.subscription.pending_update_applied": "stripe_subscription",
  "customer.subscription.pending_update_expired": "stripe_subscription",
  "customer.subscription.trial_will_end": "stripe_subscription",
  "customer.subscription.updated": "stripe_subscription",
  "customer.tax_id.created": "stripe_tax_id",
  "customer.tax_id.deleted": "stripe_tax_id",
  "customer.tax_id.updated": "stripe_tax_id",
  "customer.updated": "stripe_customer",
  "customer_cash_balance_transaction.created": "stripe_customer_cash_balance_transaction",
  "file.created": "stripe_file",
  "financial_connections.account.created": "stripe_account",
  "financial_connections.account.deactivated": "stripe_account",
  "financial_connections.account.disconnected": "stripe_account",
  "financial_connections.account.reactivated": "stripe_account",
  "financial_connections.account.refreshed_balance": "stripe_account",
  "identity.verification_session.canceled": "stripe_verification_session",
  "identity.verification_session.created": "stripe_verification_session",
  "identity.verification_session.processing": "stripe_verification_session",
  "identity.verification_session.redacted": "stripe_verification_session",
  "identity.verification_session.requires_input": "stripe_verification_session",
  "identity.verification_session.verified": "stripe_verification_session",
  "invoice.created": "stripe_invoice",
  "invoice.deleted": "stripe_invoice",
  "invoice.finalization_failed": "stripe_invoice",
  "invoice.finalized": "stripe_invoice",
  "invoice.marked_uncollectible": "stripe_invoice",
  "invoice.paid": "stripe_invoice",
  "invoice.payment_action_required": "stripe_invoice",
  "invoice.payment_failed": "stripe_invoice",
  "invoice.payment_succeeded": "stripe_invoice",
  "invoice.sent": "stripe_invoice",
  "invoice.upcoming": "stripe_invoice",
  "invoice.updated": "stripe_invoice",
  "invoice.voided": "stripe_invoice",
  "invoiceitem.created": "stripe_invoiceitem",
  "invoiceitem.deleted": "stripe_invoiceitem",
  "invoiceitem.updated": "stripe_invoiceitem",
  "issuing_authorization.created": "stripe_issuing_authorization",
  "issuing_authorization.request": "stripe_issuing_authorization",
  "issuing_authorization.updated": "stripe_issuing_authorization",
  "issuing_card.created": "stripe_issuing_card",
  "issuing_card.updated": "stripe_issuing_card",
  "issuing_cardholder.created": "stripe_issuing_cardholder",
  "issuing_cardholder.updated": "stripe_issuing_cardholder",
  "issuing_dispute.closed": "stripe_issuing_dispute",
  "issuing_dispute.created": "stripe_issuing_dispute",
  "issuing_dispute.funds_reinstated": "stripe_issuing_dispute",
  "issuing_dispute.submitted": "stripe_issuing_dispute",
  "issuing_dispute.updated": "stripe_issuing_dispute",
  "issuing_transaction.created": "stripe_issuing_transaction",
  "issuing_transaction.updated": "stripe_issuing_transaction",
  "mandate.updated": "stripe_mandate",
  "order.created": "stripe_order",
  "payment_intent.amount_capturable_updated": "stripe_payment_intent",
  "payment_intent.canceled": "stripe_payment_intent",
  "payment_intent.created": "stripe_payment_intent",
  "payment_intent.partially_funded": "stripe_payment_intent",
  "payment_intent.payment_failed": "stripe_payment_intent",
  "payment_intent.processing": "stripe_payment_intent",
  "payment_intent.requires_action": "stripe_payment_intent",
  "payment_intent.succeeded": "stripe_payment_intent",
  "payment_link.created": "stripe_payment_link",
  "payment_link.updated": "stripe_payment_link",
  "payment_method.attached": "stripe_payment_method",
  "payment_method.automatically_updated": "stripe_payment_method",
  "payment_method.detached": "stripe_payment_method",
  "payment_method.updated": "stripe_payment_method",
  "payout.canceled": "stripe_payout",
  "payout.created": "stripe_payout",
  "payout.failed": "stripe_payout",
  "payout.paid": "stripe_payout",
  "payout.updated": "stripe_payout",
  "person.created": "stripe_person",
  "person.deleted": "stripe_person",
  "person.updated": "stripe_person",
  "plan.created": "stripe_plan",
  "plan.deleted": "stripe_plan",
  "plan.updated": "stripe_plan",
  "price.created": "stripe_price",
  "price.deleted": "stripe_price",
  "price.updated": "stripe_price",
  "product.created": "stripe_product",
  "product.deleted": "stripe_product",
  "product.updated": "stripe_product",
  "promotion_code.created": "stripe_promotion_code",
  "promotion_code.updated": "stripe_promotion_code",
  "quote.accepted": "stripe_quote",
  "quote.canceled": "stripe_quote",
  "quote.created": "stripe_quote",
  "quote.finalized": "stripe_quote",
  "radar.early_fraud_warning.created": "stripe_early_fraud_warning",
  "radar.early_fraud_warning.updated": "stripe_early_fraud_warning",
  "recipient.created": "stripe_recipient",
  "recipient.deleted": "stripe_recipient",
  "recipient.updated": "stripe_recipient",
  "reporting.report_run.failed": "stripe_report_run",
  "reporting.report_run.succeeded": "stripe_report_run",
  "reporting.report_type.updated": "stripe_report_type",
  "review.closed": "stripe_review",
  "review.opened": "stripe_review",
  "setup_intent.canceled": "stripe_setup_intent",
  "setup_intent.created": "stripe_setup_intent",
  "setup_intent.requires_action": "stripe_setup_intent",
  "setup_intent.setup_failed": "stripe_setup_intent",
  "setup_intent.succeeded": "stripe_setup_intent",
  "sigma.scheduled_query_run.created": "stripe_scheduled_query_run",
  "sku.created": "stripe_sku",
  "sku.deleted": "stripe_sku",
  "sku.updated": "stripe_sku",
  "source.canceled": "stripe_source",
  "source.chargeable": "stripe_source",
  "source.failed": "stripe_source",
  "source.mandate_notification": "stripe_source",
  "source.refund_attributes_required": "stripe_source",
  "source.transaction.created": "stripe_transaction",
  "source.transaction.updated": "stripe_transaction",
  "subscription_schedule.aborted": "stripe_subscription_schedule",
  "subscription_schedule.canceled": "stripe_subscription_schedule",
  "subscription_schedule.completed": "stripe_subscription_schedule",
  "subscription_schedule.created": "stripe_subscription_schedule",
  "subscription_schedule.expiring": "stripe_subscription_schedule",
  "subscription_schedule.released": "stripe_subscription_schedule",
  "subscription_schedule.updated": "stripe_subscription_schedule",
  "tax_rate.created": "stripe_tax_rate",
  "tax_rate.updated": "stripe_tax_rate",
  "terminal.reader.action_failed": "stripe_reader",
  "terminal.reader.action_succeeded": "stripe_reader",
  "test_helpers.test_clock.advancing": "stripe_test_clock",
  "test_helpers.test_clock.created": "stripe_test_clock",
  "test_helpers.test_clock.deleted": "stripe_test_clock",
  "test_helpers.test_clock.internal_failure": "stripe_test_clock",
  "test_helpers.test_clock.ready": "stripe_test_clock",
  "topup.canceled": "stripe_topup",
  "topup.created": "stripe_topup",
  "topup.failed": "stripe_topup",
  "topup.reversed": "stripe_topup",
  "topup.succeeded": "stripe_topup",
  "transfer.created": "stripe_transfer",
  "transfer.reversed": "stripe_transfer",
  "transfer.updated": "stripe_transfer",
  "treasury.credit_reversal.created": "stripe_credit_reversal",
  "treasury.credit_reversal.posted": "stripe_credit_reversal",
  "treasury.debit_reversal.completed": "stripe_debit_reversal",
  "treasury.debit_reversal.created": "stripe_debit_reversal",
  "treasury.debit_reversal.initial_credit_granted": "stripe_debit_reversal",
  "treasury.financial_account.closed": "stripe_financial_account",
  "treasury.financial_account.created": "stripe_financial_account",
  "treasury.financial_account.features_status_updated": "stripe_financial_account",
  "treasury.inbound_transfer.canceled": "stripe_inbound_transfer",
  "treasury.inbound_transfer.created": "stripe_inbound_transfer",
  "treasury.inbound_transfer.failed": "stripe_inbound_transfer",
  "treasury.inbound_transfer.succeeded": "stripe_inbound_transfer",
  "treasury.outbound_payment.canceled": "stripe_outbound_payment",
  "treasury.outbound_payment.created": "stripe_outbound_payment",
  "treasury.outbound_payment.expected_arrival_date_updated": "stripe_outbound_payment",
  "treasury.outbound_payment.failed": "stripe_outbound_payment",
  "treasury.outbound_payment.posted": "stripe_outbound_payment",
  "treasury.outbound_payment.returned": "stripe_outbound_payment",
  "treasury.outbound_transfer.canceled": "stripe_outbound_transfer",
  "treasury.outbound_transfer.created": "stripe_outbound_transfer",
  "treasury.outbound_transfer.expected_arrival_date_updated": "stripe_outbound_transfer",
  "treasury.outbound_transfer.failed": "stripe_outbound_transfer",
  "treasury.outbound_transfer.posted": "stripe_outbound_transfer",
  "treasury.outbound_transfer.returned": "stripe_outbound_transfer",
  "treasury.received_credit.created": "stripe_received_credit",
  "treasury.received_credit.failed": "stripe_received_credit",
  "treasury.received_credit.succeeded": "stripe_received_credit",
  "treasury.received_debit.created": "stripe_received_debit"
};

// generated/stripeTables.ts
var STRIPE_TABLES = {
  "application": [
    "id",
    "name",
    "object"
  ],
  "account": [
    "business_profile",
    "business_type",
    "capabilities",
    "charges_enabled",
    "company",
    "controller",
    "country",
    "created",
    "default_currency",
    "details_submitted",
    "email",
    "external_accounts",
    "future_requirements",
    "id",
    "individual",
    "metadata",
    "object",
    "payouts_enabled",
    "requirements",
    "settings",
    "tos_acceptance",
    "type"
  ],
  "application_fee": [
    "account",
    "amount",
    "amount_refunded",
    "application",
    "balance_transaction",
    "charge",
    "created",
    "currency",
    "id",
    "livemode",
    "object",
    "originating_transaction",
    "refunded",
    "refunds"
  ],
  "refund": [
    "amount",
    "balance_transaction",
    "charge",
    "created",
    "currency",
    "description",
    "failure_balance_transaction",
    "failure_reason",
    "id",
    "instructions_email",
    "metadata",
    "next_action",
    "object",
    "payment_intent",
    "reason",
    "receipt_number",
    "source_transfer_reversal",
    "status",
    "transfer_reversal"
  ],
  "balance": [
    "available",
    "connect_reserved",
    "instant_available",
    "issuing",
    "livemode",
    "object",
    "pending"
  ],
  "configuration": [
    "active",
    "application",
    "business_profile",
    "created",
    "default_return_url",
    "features",
    "id",
    "is_default",
    "livemode",
    "metadata",
    "object",
    "updated"
  ],
  "session": [
    "configuration",
    "created",
    "customer",
    "id",
    "livemode",
    "locale",
    "object",
    "on_behalf_of",
    "return_url",
    "url"
  ],
  "capability": [
    "account",
    "future_requirements",
    "id",
    "object",
    "requested",
    "requested_at",
    "requirements",
    "status"
  ],
  "cash_balance": [
    "available",
    "customer",
    "livemode",
    "object",
    "settings"
  ],
  "charge": [
    "amount",
    "amount_captured",
    "amount_refunded",
    "application",
    "application_fee",
    "application_fee_amount",
    "balance_transaction",
    "billing_details",
    "calculated_statement_descriptor",
    "captured",
    "created",
    "currency",
    "customer",
    "description",
    "disputed",
    "failure_balance_transaction",
    "failure_code",
    "failure_message",
    "fraud_details",
    "id",
    "invoice",
    "livemode",
    "metadata",
    "object",
    "on_behalf_of",
    "outcome",
    "paid",
    "payment_intent",
    "payment_method",
    "payment_method_details",
    "radar_options",
    "receipt_email",
    "receipt_number",
    "receipt_url",
    "refunded",
    "refunds",
    "review",
    "shipping",
    "source_transfer",
    "statement_descriptor",
    "statement_descriptor_suffix",
    "status",
    "transfer",
    "transfer_data",
    "transfer_group"
  ],
  "dispute": [
    "amount",
    "balance_transactions",
    "charge",
    "created",
    "currency",
    "evidence",
    "evidence_details",
    "id",
    "is_charge_refundable",
    "livemode",
    "metadata",
    "object",
    "payment_intent",
    "reason",
    "status"
  ],
  "checkout_session": [
    "after_expiration",
    "allow_promotion_codes",
    "amount_subtotal",
    "amount_total",
    "automatic_tax",
    "billing_address_collection",
    "cancel_url",
    "client_reference_id",
    "consent",
    "consent_collection",
    "currency",
    "customer",
    "customer_creation",
    "customer_details",
    "customer_email",
    "expires_at",
    "id",
    "line_items",
    "livemode",
    "locale",
    "metadata",
    "mode",
    "object",
    "payment_intent",
    "payment_link",
    "payment_method_collection",
    "payment_method_options",
    "payment_method_types",
    "payment_status",
    "phone_number_collection",
    "recovered_from",
    "setup_intent",
    "shipping_address_collection",
    "shipping_cost",
    "shipping_details",
    "shipping_options",
    "status",
    "submit_type",
    "subscription",
    "success_url",
    "tax_id_collection",
    "total_details",
    "url"
  ],
  "coupon": [
    "amount_off",
    "applies_to",
    "created",
    "currency",
    "currency_options",
    "duration",
    "duration_in_months",
    "id",
    "livemode",
    "max_redemptions",
    "metadata",
    "name",
    "object",
    "percent_off",
    "redeem_by",
    "times_redeemed",
    "valid"
  ],
  "credit_note": [
    "amount",
    "created",
    "currency",
    "customer",
    "customer_balance_transaction",
    "discount_amount",
    "discount_amounts",
    "id",
    "invoice",
    "lines",
    "livemode",
    "memo",
    "metadata",
    "number",
    "object",
    "out_of_band_amount",
    "pdf",
    "reason",
    "refund",
    "status",
    "subtotal",
    "subtotal_excluding_tax",
    "tax_amounts",
    "total",
    "total_excluding_tax",
    "type",
    "voided_at"
  ],
  "customer": [
    "address",
    "balance",
    "cash_balance",
    "created",
    "currency",
    "default_source",
    "delinquent",
    "description",
    "discount",
    "email",
    "id",
    "invoice_credit_balance",
    "invoice_prefix",
    "invoice_settings",
    "livemode",
    "metadata",
    "name",
    "next_invoice_sequence",
    "object",
    "phone",
    "preferred_locales",
    "shipping",
    "sources",
    "subscriptions",
    "tax",
    "tax_exempt",
    "tax_ids",
    "test_clock"
  ],
  "discount": [
    "checkout_session",
    "coupon",
    "customer",
    "end",
    "id",
    "invoice",
    "invoice_item",
    "object",
    "promotion_code",
    "start",
    "subscription"
  ],
  "source": [
    "ach_credit_transfer",
    "ach_debit",
    "acss_debit",
    "alipay",
    "amount",
    "au_becs_debit",
    "bancontact",
    "card",
    "card_present",
    "client_secret",
    "code_verification",
    "created",
    "currency",
    "customer",
    "eps",
    "flow",
    "giropay",
    "id",
    "ideal",
    "klarna",
    "livemode",
    "metadata",
    "multibanco",
    "object",
    "owner",
    "p24",
    "receiver",
    "redirect",
    "sepa_debit",
    "sofort",
    "source_order",
    "statement_descriptor",
    "status",
    "three_d_secure",
    "type",
    "usage",
    "wechat"
  ],
  "subscription": [
    "application",
    "application_fee_percent",
    "automatic_tax",
    "billing_cycle_anchor",
    "billing_thresholds",
    "cancel_at",
    "cancel_at_period_end",
    "canceled_at",
    "collection_method",
    "created",
    "currency",
    "current_period_end",
    "current_period_start",
    "customer",
    "days_until_due",
    "default_payment_method",
    "default_source",
    "default_tax_rates",
    "description",
    "discount",
    "ended_at",
    "id",
    "items",
    "latest_invoice",
    "livemode",
    "metadata",
    "next_pending_invoice_item_invoice",
    "object",
    "pause_collection",
    "payment_settings",
    "pending_invoice_item_interval",
    "pending_setup_intent",
    "pending_update",
    "schedule",
    "start_date",
    "status",
    "test_clock",
    "transfer_data",
    "trial_end",
    "trial_start"
  ],
  "tax_id": [
    "country",
    "created",
    "customer",
    "id",
    "livemode",
    "object",
    "type",
    "value",
    "verification"
  ],
  "customer_cash_balance_transaction": [
    "applied_to_payment",
    "created",
    "currency",
    "customer",
    "ending_balance",
    "funded",
    "id",
    "livemode",
    "net_amount",
    "object",
    "refunded_from_payment",
    "type",
    "unapplied_from_payment"
  ],
  "file": [
    "created",
    "expires_at",
    "filename",
    "id",
    "links",
    "object",
    "purpose",
    "size",
    "title",
    "type",
    "url"
  ],
  "verification_session": [
    "client_secret",
    "created",
    "id",
    "last_error",
    "last_verification_report",
    "livemode",
    "metadata",
    "object",
    "options",
    "redaction",
    "status",
    "type",
    "url",
    "verified_outputs"
  ],
  "invoice": [
    "account_country",
    "account_name",
    "account_tax_ids",
    "amount_due",
    "amount_paid",
    "amount_remaining",
    "application",
    "application_fee_amount",
    "attempt_count",
    "attempted",
    "auto_advance",
    "automatic_tax",
    "billing_reason",
    "charge",
    "collection_method",
    "created",
    "currency",
    "custom_fields",
    "customer",
    "customer_address",
    "customer_email",
    "customer_name",
    "customer_phone",
    "customer_shipping",
    "customer_tax_exempt",
    "customer_tax_ids",
    "default_payment_method",
    "default_source",
    "default_tax_rates",
    "description",
    "discount",
    "discounts",
    "due_date",
    "ending_balance",
    "footer",
    "hosted_invoice_url",
    "id",
    "invoice_pdf",
    "last_finalization_error",
    "lines",
    "livemode",
    "metadata",
    "next_payment_attempt",
    "number",
    "object",
    "on_behalf_of",
    "paid",
    "paid_out_of_band",
    "payment_intent",
    "payment_settings",
    "period_end",
    "period_start",
    "post_payment_credit_notes_amount",
    "pre_payment_credit_notes_amount",
    "quote",
    "receipt_number",
    "rendering_options",
    "starting_balance",
    "statement_descriptor",
    "status",
    "status_transitions",
    "subscription",
    "subscription_proration_date",
    "subtotal",
    "subtotal_excluding_tax",
    "tax",
    "test_clock",
    "threshold_reason",
    "total",
    "total_discount_amounts",
    "total_excluding_tax",
    "total_tax_amounts",
    "transfer_data",
    "webhooks_delivered_at"
  ],
  "invoiceitem": [
    "amount",
    "currency",
    "customer",
    "date",
    "description",
    "discountable",
    "discounts",
    "id",
    "invoice",
    "livemode",
    "metadata",
    "object",
    "period",
    "price",
    "proration",
    "quantity",
    "subscription",
    "subscription_item",
    "tax_rates",
    "test_clock",
    "unit_amount",
    "unit_amount_decimal"
  ],
  "issuing_authorization": [
    "amount",
    "amount_details",
    "approved",
    "authorization_method",
    "balance_transactions",
    "card",
    "cardholder",
    "created",
    "currency",
    "id",
    "livemode",
    "merchant_amount",
    "merchant_currency",
    "merchant_data",
    "metadata",
    "object",
    "pending_request",
    "request_history",
    "status",
    "transactions",
    "treasury",
    "verification_data",
    "wallet"
  ],
  "issuing_card": [
    "brand",
    "cancellation_reason",
    "cardholder",
    "created",
    "currency",
    "cvc",
    "exp_month",
    "exp_year",
    "financial_account",
    "id",
    "last4",
    "livemode",
    "metadata",
    "number",
    "object",
    "replaced_by",
    "replacement_for",
    "replacement_reason",
    "shipping",
    "spending_controls",
    "status",
    "type",
    "wallets"
  ],
  "issuing_cardholder": [
    "billing",
    "company",
    "created",
    "email",
    "id",
    "individual",
    "livemode",
    "metadata",
    "name",
    "object",
    "phone_number",
    "requirements",
    "spending_controls",
    "status",
    "type"
  ],
  "issuing_dispute": [
    "amount",
    "balance_transactions",
    "created",
    "currency",
    "evidence",
    "id",
    "livemode",
    "metadata",
    "object",
    "status",
    "transaction",
    "treasury"
  ],
  "issuing_transaction": [
    "amount",
    "amount_details",
    "authorization",
    "balance_transaction",
    "card",
    "cardholder",
    "created",
    "currency",
    "dispute",
    "id",
    "livemode",
    "merchant_amount",
    "merchant_currency",
    "merchant_data",
    "metadata",
    "object",
    "purchase_details",
    "treasury",
    "type",
    "wallet"
  ],
  "mandate": [
    "customer_acceptance",
    "id",
    "livemode",
    "multi_use",
    "object",
    "payment_method",
    "payment_method_details",
    "single_use",
    "status",
    "type"
  ],
  "order": [
    "amount_subtotal",
    "amount_total",
    "application",
    "automatic_tax",
    "billing_details",
    "client_secret",
    "created",
    "currency",
    "customer",
    "description",
    "discounts",
    "id",
    "ip_address",
    "line_items",
    "livemode",
    "metadata",
    "object",
    "payment",
    "shipping_cost",
    "shipping_details",
    "status",
    "tax_details",
    "total_details"
  ],
  "payment_intent": [
    "amount",
    "amount_capturable",
    "amount_details",
    "amount_received",
    "application",
    "application_fee_amount",
    "automatic_payment_methods",
    "canceled_at",
    "cancellation_reason",
    "capture_method",
    "charges",
    "client_secret",
    "confirmation_method",
    "created",
    "currency",
    "customer",
    "description",
    "id",
    "invoice",
    "last_payment_error",
    "livemode",
    "metadata",
    "next_action",
    "object",
    "on_behalf_of",
    "payment_method",
    "payment_method_options",
    "payment_method_types",
    "processing",
    "receipt_email",
    "review",
    "setup_future_usage",
    "shipping",
    "statement_descriptor",
    "statement_descriptor_suffix",
    "status",
    "transfer_data",
    "transfer_group"
  ],
  "payment_link": [
    "active",
    "after_completion",
    "allow_promotion_codes",
    "application_fee_amount",
    "application_fee_percent",
    "automatic_tax",
    "billing_address_collection",
    "consent_collection",
    "currency",
    "customer_creation",
    "id",
    "line_items",
    "livemode",
    "metadata",
    "object",
    "on_behalf_of",
    "payment_intent_data",
    "payment_method_collection",
    "payment_method_types",
    "phone_number_collection",
    "shipping_address_collection",
    "shipping_options",
    "submit_type",
    "subscription_data",
    "tax_id_collection",
    "transfer_data",
    "url"
  ],
  "payment_method": [
    "acss_debit",
    "affirm",
    "afterpay_clearpay",
    "alipay",
    "au_becs_debit",
    "bacs_debit",
    "bancontact",
    "billing_details",
    "blik",
    "boleto",
    "card",
    "card_present",
    "created",
    "customer",
    "customer_balance",
    "eps",
    "fpx",
    "giropay",
    "grabpay",
    "id",
    "ideal",
    "interac_present",
    "klarna",
    "konbini",
    "link",
    "livemode",
    "metadata",
    "object",
    "oxxo",
    "p24",
    "paynow",
    "promptpay",
    "radar_options",
    "sepa_debit",
    "sofort",
    "type",
    "us_bank_account",
    "wechat_pay"
  ],
  "payout": [
    "amount",
    "arrival_date",
    "automatic",
    "balance_transaction",
    "created",
    "currency",
    "description",
    "destination",
    "failure_balance_transaction",
    "failure_code",
    "failure_message",
    "id",
    "livemode",
    "metadata",
    "method",
    "object",
    "original_payout",
    "reversed_by",
    "source_type",
    "statement_descriptor",
    "status",
    "type"
  ],
  "person": [
    "account",
    "address",
    "address_kana",
    "address_kanji",
    "created",
    "dob",
    "email",
    "first_name",
    "first_name_kana",
    "first_name_kanji",
    "full_name_aliases",
    "future_requirements",
    "gender",
    "id",
    "id_number_provided",
    "id_number_secondary_provided",
    "last_name",
    "last_name_kana",
    "last_name_kanji",
    "maiden_name",
    "metadata",
    "nationality",
    "object",
    "phone",
    "political_exposure",
    "registered_address",
    "relationship",
    "requirements",
    "ssn_last_4_provided",
    "verification"
  ],
  "plan": [
    "active",
    "aggregate_usage",
    "amount",
    "amount_decimal",
    "billing_scheme",
    "created",
    "currency",
    "id",
    "interval",
    "interval_count",
    "livemode",
    "metadata",
    "nickname",
    "object",
    "product",
    "tiers",
    "tiers_mode",
    "transform_usage",
    "trial_period_days",
    "usage_type"
  ],
  "price": [
    "active",
    "billing_scheme",
    "created",
    "currency",
    "currency_options",
    "custom_unit_amount",
    "id",
    "livemode",
    "lookup_key",
    "metadata",
    "nickname",
    "object",
    "product",
    "recurring",
    "tax_behavior",
    "tiers",
    "tiers_mode",
    "transform_quantity",
    "type",
    "unit_amount",
    "unit_amount_decimal"
  ],
  "product": [
    "active",
    "created",
    "default_price",
    "description",
    "id",
    "images",
    "livemode",
    "metadata",
    "name",
    "object",
    "package_dimensions",
    "shippable",
    "statement_descriptor",
    "tax_code",
    "unit_label",
    "updated",
    "url"
  ],
  "promotion_code": [
    "active",
    "code",
    "coupon",
    "created",
    "customer",
    "expires_at",
    "id",
    "livemode",
    "max_redemptions",
    "metadata",
    "object",
    "restrictions",
    "times_redeemed"
  ],
  "quote": [
    "amount_subtotal",
    "amount_total",
    "application",
    "application_fee_amount",
    "application_fee_percent",
    "automatic_tax",
    "collection_method",
    "computed",
    "created",
    "currency",
    "customer",
    "default_tax_rates",
    "description",
    "discounts",
    "expires_at",
    "footer",
    "from_quote",
    "header",
    "id",
    "invoice",
    "invoice_settings",
    "line_items",
    "livemode",
    "metadata",
    "number",
    "object",
    "on_behalf_of",
    "status",
    "status_transitions",
    "subscription",
    "subscription_data",
    "subscription_schedule",
    "test_clock",
    "total_details",
    "transfer_data"
  ],
  "early_fraud_warning": [
    "actionable",
    "charge",
    "created",
    "fraud_type",
    "id",
    "livemode",
    "object",
    "payment_intent"
  ],
  "recipient": [
    "active_account",
    "cards",
    "created",
    "default_card",
    "description",
    "email",
    "id",
    "livemode",
    "metadata",
    "migrated_to",
    "name",
    "object",
    "rolled_back_from",
    "type"
  ],
  "report_run": [
    "created",
    "error",
    "id",
    "livemode",
    "object",
    "parameters",
    "report_type",
    "result",
    "status",
    "succeeded_at"
  ],
  "report_type": [
    "data_available_end",
    "data_available_start",
    "default_columns",
    "id",
    "livemode",
    "name",
    "object",
    "updated",
    "version"
  ],
  "review": [
    "billing_zip",
    "charge",
    "closed_reason",
    "created",
    "id",
    "ip_address",
    "ip_address_location",
    "livemode",
    "object",
    "open",
    "opened_reason",
    "payment_intent",
    "reason",
    "session"
  ],
  "setup_intent": [
    "application",
    "attach_to_self",
    "cancellation_reason",
    "client_secret",
    "created",
    "customer",
    "description",
    "flow_directions",
    "id",
    "last_setup_error",
    "latest_attempt",
    "livemode",
    "mandate",
    "metadata",
    "next_action",
    "object",
    "on_behalf_of",
    "payment_method",
    "payment_method_options",
    "payment_method_types",
    "single_use_mandate",
    "status",
    "usage"
  ],
  "scheduled_query_run": [
    "created",
    "data_load_time",
    "error",
    "file",
    "id",
    "livemode",
    "object",
    "result_available_until",
    "sql",
    "status",
    "title"
  ],
  "sku": [
    "active",
    "attributes",
    "created",
    "currency",
    "id",
    "image",
    "inventory",
    "livemode",
    "metadata",
    "object",
    "package_dimensions",
    "price",
    "product",
    "updated"
  ],
  "transaction": [
    "ach_credit_transfer",
    "amount",
    "chf_credit_transfer",
    "created",
    "currency",
    "gbp_credit_transfer",
    "id",
    "livemode",
    "object",
    "paper_check",
    "sepa_credit_transfer",
    "source",
    "status",
    "type"
  ],
  "subscription_schedule": [
    "application",
    "canceled_at",
    "completed_at",
    "created",
    "current_phase",
    "customer",
    "default_settings",
    "end_behavior",
    "id",
    "livemode",
    "metadata",
    "object",
    "phases",
    "released_at",
    "released_subscription",
    "status",
    "subscription",
    "test_clock"
  ],
  "tax_rate": [
    "active",
    "country",
    "created",
    "description",
    "display_name",
    "id",
    "inclusive",
    "jurisdiction",
    "livemode",
    "metadata",
    "object",
    "percentage",
    "state",
    "tax_type"
  ],
  "reader": [
    "action",
    "device_sw_version",
    "device_type",
    "id",
    "ip_address",
    "label",
    "livemode",
    "location",
    "metadata",
    "object",
    "serial_number",
    "status"
  ],
  "test_clock": [
    "created",
    "deletes_after",
    "frozen_time",
    "id",
    "livemode",
    "name",
    "object",
    "status"
  ],
  "topup": [
    "amount",
    "balance_transaction",
    "created",
    "currency",
    "description",
    "expected_availability_date",
    "failure_code",
    "failure_message",
    "id",
    "livemode",
    "metadata",
    "object",
    "source",
    "statement_descriptor",
    "status",
    "transfer_group"
  ],
  "transfer": [
    "amount",
    "amount_reversed",
    "balance_transaction",
    "created",
    "currency",
    "description",
    "destination",
    "destination_payment",
    "id",
    "livemode",
    "metadata",
    "object",
    "reversals",
    "reversed",
    "source_transaction",
    "source_type",
    "transfer_group"
  ],
  "credit_reversal": [
    "amount",
    "currency",
    "financial_account",
    "hosted_regulatory_receipt_url",
    "id",
    "livemode",
    "metadata",
    "network",
    "object",
    "received_credit",
    "status",
    "status_transitions",
    "transaction"
  ],
  "debit_reversal": [
    "amount",
    "currency",
    "financial_account",
    "hosted_regulatory_receipt_url",
    "id",
    "linked_flows",
    "livemode",
    "metadata",
    "network",
    "object",
    "received_debit",
    "status",
    "status_transitions",
    "transaction"
  ],
  "financial_account": [
    "active_features",
    "balance",
    "country",
    "created",
    "features",
    "financial_addresses",
    "id",
    "livemode",
    "metadata",
    "object",
    "pending_features",
    "platform_restrictions",
    "restricted_features",
    "status",
    "status_details",
    "supported_currencies"
  ],
  "inbound_transfer": [
    "amount",
    "cancelable",
    "created",
    "currency",
    "description",
    "failure_details",
    "financial_account",
    "hosted_regulatory_receipt_url",
    "id",
    "linked_flows",
    "livemode",
    "metadata",
    "object",
    "origin_payment_method",
    "origin_payment_method_details",
    "returned",
    "statement_descriptor",
    "status",
    "status_transitions",
    "transaction"
  ],
  "outbound_payment": [
    "amount",
    "cancelable",
    "created",
    "currency",
    "customer",
    "description",
    "destination_payment_method",
    "destination_payment_method_details",
    "end_user_details",
    "expected_arrival_date",
    "financial_account",
    "hosted_regulatory_receipt_url",
    "id",
    "livemode",
    "metadata",
    "object",
    "returned_details",
    "statement_descriptor",
    "status",
    "status_transitions",
    "transaction"
  ],
  "outbound_transfer": [
    "amount",
    "cancelable",
    "created",
    "currency",
    "description",
    "destination_payment_method",
    "destination_payment_method_details",
    "expected_arrival_date",
    "financial_account",
    "hosted_regulatory_receipt_url",
    "id",
    "livemode",
    "metadata",
    "object",
    "returned_details",
    "statement_descriptor",
    "status",
    "status_transitions",
    "transaction"
  ],
  "received_credit": [
    "amount",
    "created",
    "currency",
    "description",
    "failure_code",
    "financial_account",
    "hosted_regulatory_receipt_url",
    "id",
    "initiating_payment_method_details",
    "linked_flows",
    "livemode",
    "network",
    "object",
    "reversal_details",
    "status",
    "transaction"
  ],
  "received_debit": [
    "amount",
    "created",
    "currency",
    "description",
    "failure_code",
    "financial_account",
    "hosted_regulatory_receipt_url",
    "id",
    "initiating_payment_method_details",
    "linked_flows",
    "livemode",
    "network",
    "object",
    "reversal_details",
    "status",
    "transaction"
  ]
};

// src/utils/logger.ts
var logger = {
  log: (...args) => {
    console.log(`[stripe-sync][log][${new Date().toISOString()}] --> ${args}`);
  },
  error: (...args) => {
    console.error(
      `[stripe-sync][error][${new Date().toISOString()}] --> ${args}`
    );
  }
};

// src/handler.ts
function getTableName(event) {
  if (!(event.type in STRIPE_EVENT_TABLE_MAP)) {
    throw new Error(`Unknown event type: ${event.type}`);
  }
  return STRIPE_EVENT_TABLE_MAP[event.type];
}
async function saveToDatabase(opts) {
  const { event, databaseAdapter } = opts;
  const object = event.data.object;
  const tableName = getTableName(event);
  (0, import_tiny_invariant.default)(tableName, "missing tableName");
  const columnNames = STRIPE_TABLES[tableName];
  (0, import_tiny_invariant.default)(columnNames, "missing columnNames");
  const fullTableName = opts.databaseAdapter.getFromClause({
    schema: databaseAdapter.schema,
    table: tableName
  });
  const nonNullData = Object.fromEntries(
    Object.entries(object).filter(
      ([key, value]) => value !== null && columnNames.includes(key)
    )
  );
  await databaseAdapter.upsertRow({
    data: nonNullData,
    fullTableName,
    columnNames
  });
  opts.handlerOpts.enableLogs && logger.log(`Saved ${event.type} to ${fullTableName}. eventId: ${event.id}`);
}
async function dispatchCallback(opts) {
  const { event, handlerOpts } = opts;
  const { callbacks } = handlerOpts;
  if (callbacks?.[event.type]) {
    await callbacks[event.type](event);
  }
}
function createHandler(opts) {
  const handler = async (context) => {
    const { request } = context;
    try {
      if (request.method !== "POST") {
        throw new Error("Only POST requests are allowed");
      }
      const signature = request.headers.get("stripe-signature");
      if (!signature) {
        throw new Error("missing signature header");
      }
      let event;
      try {
        const body = await request.text();
        event = await opts.stripe.webhooks.constructEventAsync(
          body,
          signature,
          opts.stripeEndpointSecret,
          void 0,
          opts.cryptoProvider
        );
        event = JSON.parse(body);
      } catch (err) {
        logger.log(`\u26A0\uFE0F  Webhook signature verification failed `, err.message);
        throw new Response("Invalid signature", {
          status: 401
        });
      }
      opts.enableLogs && logger.log(`Received triggered ${event.type}. (${event.id})`);
      try {
        const jobs = [];
        if (opts.databaseAdapter) {
          jobs.push(
            saveToDatabase({
              event,
              databaseAdapter: opts.databaseAdapter,
              handlerOpts: opts
            })
          );
        }
        if (opts.callbacks) {
          jobs.push(dispatchCallback({ event, handlerOpts: opts }));
        }
        if (opts.insertIntoDatabaseFirst) {
          for (const job of jobs) {
            await job;
          }
        } else {
          await Promise.all(jobs);
        }
      } catch (e) {
        logger.error(
          `Error handling ${event.type}`,
          JSON.stringify(e, null, 2)
        );
        return new Response("Error handling event", {
          status: 500
        });
      }
      return new Response("ok");
    } catch (e) {
      logger.error(JSON.stringify(e?.message, null, 2));
      throw new Response("server error", { status: 500 });
    }
  };
  return handler;
}

// src/adapters/express.ts
var createExpressHandler = (opts) => (0, import_adapter_node.createMiddleware)(createHandler(opts));
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  createExpressHandler
});
